"""Initial migration.

Revision ID: cfaa8a376a93
Revises: 
Create Date: 2023-03-15 22:44:26.227552

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cfaa8a376a93'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_posts_id', table_name='posts')
    op.drop_table('posts')
    op.drop_index('ix_users_user_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_post_post_id', table_name='post')
    op.drop_table('post')
    op.drop_index('ix_comment_comment_id', table_name='comment')
    op.drop_table('comment')
    op.drop_index('ix_category_category_id', table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('category_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('category_url', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('category_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('category_summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('category_id', name='category_pkey'),
    sa.UniqueConstraint('category_url', name='category_category_url_key')
    )
    op.create_index('ix_category_category_id', 'category', ['category_id'], unique=False)
    op.create_table('comment',
    sa.Column('comment_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_email', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('comment_date', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('comment_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.post_id'], name='comment_post_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='comment_user_id_fkey'),
    sa.PrimaryKeyConstraint('comment_id', name='comment_pkey')
    )
    op.create_index('ix_comment_comment_id', 'comment', ['comment_id'], unique=False)
    op.create_table('post',
    sa.Column('post_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('post_url', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('post_title', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('post_image', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('post_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('post_id', name='post_pkey'),
    sa.UniqueConstraint('post_url', name='post_post_url_key')
    )
    op.create_index('ix_post_post_id', 'post', ['post_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_role', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('user_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('user_email', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey'),
    sa.UniqueConstraint('user_email', name='users_user_email_key'),
    sa.UniqueConstraint('user_name', name='users_user_name_key')
    )
    op.create_index('ix_users_user_id', 'users', ['user_id'], unique=False)
    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='posts_pkey')
    )
    op.create_index('ix_posts_id', 'posts', ['id'], unique=False)
    # ### end Alembic commands ###
